        row_class = 'total-row' if 'TOTAL' in remetente.upper() else ''

        # Para linhas de totaliza√ß√£o, n√£o exibe imagem
        if row_class == 'total-row':
            img_html = ''
        else:
            # Imagem do anexo
            anexo = str(row.get('ANEXO', ''))
            img_html = ""
            if anexo != 'nan' and anexo != '' and anexo.lower().endswith(('.jpg', '.jpeg', '.png')):
                # Tenta encontrar a imagem em imgs/ primeiro, depois em input/
                img_path = None
                for diretorio in ['imgs', 'input']:
                    caminho_completo = Path(diretorio) / anexo
                    if caminho_completo.is_file():
                        img_path = caminho_completo
                        break

                if img_path:
                    try:
                        with open(img_path, "rb") as f:
                            encoded = base64.b64encode(f.read()).decode()
                            ext = img_path.suffix.replace(".", "").lower()
                            if ext == 'jpg':
                                ext = 'jpeg'
                            img_html = f'<img src="data:image/{ext};base64,{encoded}" class="thumb" alt="Comprovante {anexo}" title="{anexo}" onclick="showModal(this.src)">'
                    except Exception as e:
                        print(f"Erro ao processar imagem {anexo}: {e}")
                        img_html = f'<span style="color: #e74c3c; font-size: 11px;">Erro: {anexo}</span>'
                else:
                    img_html = f'<span style="color: #f39c12; font-size: 11px;">N√£o encontrado: {anexo}</span>'

        # Descri√ß√£o
        descricao = str(row.get('DESCRICAO', ''))
        descricao_html = descricao if descricao != 'nan' else ''

        html += f'''        <tr class="{row_class}">
          <td class="data-hora">{data_hora}</td>
          <td>{classificacao_html}</td>
          <td>{ricardo_html}</td>
          <td>{rafael_html}</td>
          <td>{img_html}</td>
          <td style="text-align: left; font-size: 12px;">{descricao_html}</td>
        </tr>
'''

    html += '''      </tbody>
    </table>
  </div>

  <div id="modal" class="modal" onclick="hideModal()">
    <img class="modal-content" id="modal-img">
  </div>

  <script>
    function showModal(imgSrc) {
      const modal = document.getElementById('modal');
      const modalImg = document.getElementById('modal-img');
      modalImg.src = imgSrc;
      modal.classList.add('show');
    }
    function hideModal() {
      const modal = document.getElementById('modal');
      modal.classList.remove('show');
    }
    // Toggle payments visibility
    let showPayments = false;
    document.addEventListener('DOMContentLoaded', () => {
      const toggleBtn = document.getElementById('toggle-payments');
      toggleBtn.addEventListener('click', () => {
        showPayments = !showPayments;
        document.querySelectorAll('tbody tr').forEach(row => {
          const isPayment = row.querySelector('td:nth-child(2) .classificacao.pagamento');
          row.style.display = isPayment ? (showPayments ? '' : 'none') : '';
        });
      });
      // Hide payments by default
      document.querySelectorAll('tbody tr').forEach(row => {
        const isPayment = row.querySelector('td:nth-child(2) .classificacao.pagamento');
        if (isPayment) row.style.display = 'none';
      });
    });
    
    // Esconde overlay quando o DOM estiver completamente carregado
    document.addEventListener('DOMContentLoaded', () => {
      const overlay = document.getElementById('loading-overlay');
      if (overlay) overlay.style.display = 'none';
    });
  </script>
</body>
</html>'''

    with open(nome_arquivo, "w", encoding="utf-8") as f:
        f.write(html)

def gerar_html_mensal_editavel(df_mes, nome_arquivo, nome_mes, ano):
    """Gera o HTML edit√°vel para um m√™s espec√≠fico"""
    print(f"DEBUG gerar_html_mensal_editavel: Processando {len(df_mes)} linhas para {nome_mes} {ano}")
    if len(df_mes) > 0:
        print(f"DEBUG: Primeiras 3 linhas de DESCRICAO: {df_mes['DESCRICAO'].head(3).tolist()}")
        print(f"DEBUG: Primeiras 3 linhas de CLASSIFICACAO: {df_mes['CLASSIFICACAO'].head(3).tolist()}")
    
    html = '''<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Relat√≥rio de Presta√ß√£o de Contas - ''' + f"{nome_mes} {ano}" + '''</title>
  <style>
    body { 
      font-family: Arial, sans-serif; 
      margin: 20px; 
      background-color: #f9f9f9;
      line-height: 1.6;
    }
    .container {
      max-width: 1200px;
      margin: 0 auto;
      background-color: white;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 0 20px rgba(0,0,0,0.1);
    }
    h1 { 
      text-align: center; 
      color: #2c3e50;
      margin-bottom: 30px;
      font-size: 28px;
      border-bottom: 3px solid #3498db;
      padding-bottom: 15px;
    }
    .info {
      text-align: center;
      margin-bottom: 20px;
      color: #7f8c8d;
      font-style: italic;
    }
    table { 
      border-collapse: collapse; 
      width: 100%; 
      margin-top: 20px;
      font-size: 14px;
    }
    th, td { 
      border: 1px solid #ddd; 
      padding: 12px 8px; 
      text-align: center;
      vertical-align: middle;
    }
    th { 
      background-color: #3498db; 
      color: white;
      font-weight: bold;
      text-transform: uppercase;
      font-size: 12px;
    }
    tr:nth-child(even) {
      background-color: #f8f9fa;
    }
    tr:hover {
      background-color: #e3f2fd;
    }
    .total-row {
      background-color: #fff3cd !important;
      font-weight: bold;
      border-top: 3px solid #ffc107;
    }
    .total-row:hover {
      background-color: #fff3cd !important;
    }
    img.thumb { 
      max-height: 50px; 
      max-width: 80px;
      cursor: pointer; 
      transition: transform 0.3s ease;
      border-radius: 5px;
      border: 1px solid #ddd;
    }
    img.thumb:hover { 
      transform: scale(3); 
      z-index: 9999; 
      position: relative;
      border: 2px solid #3498db;
      box-shadow: 0 0 20px rgba(0,0,0,0.5);
    }
    .modal {
      display: none;
      position: fixed;
      z-index: 9999;
      padding-top: 0;
      left: 0;
      top: 0;
      width: 100vw;
      height: 100vh;
      overflow: auto;
      background-color: rgba(0,0,0,0.95);
    }
    .modal-content {
      margin: auto;
      display: block;
      width: 100%;
      height: 100%;
      object-fit: contain;
    }
    .modal.show {
      display: block;
    }
    .valor {
      font-weight: bold;
      color: #27ae60;
    }
    .data-hora {
      font-family: monospace;
      font-size: 12px;
      white-space: nowrap;
    }
    .classificacao {
      padding: 4px 8px;
      border-radius: 15px;
      font-size: 11px;
      font-weight: bold;
      text-transform: uppercase;
    }
    .transferencia {
      background-color: #e8f5e8;
      color: #2e7d32;
    }
    .pagamento {
      background-color: #fff3e0;
      color: #f57c00;
    }
    /* Estilos para edi√ß√£o inline */
    td[data-field] {
      cursor: pointer;
      position: relative;
    }
    td[data-field]:hover {
      background-color: #e3f2fd !important;
    }
    td[data-field] input {
      width: 100%;
      border: 2px solid #3498db;
      padding: 4px;
      font-size: inherit;
      font-family: inherit;
      background-color: #fff;
    }

    @media (max-width: 768px) {
      .container {
        margin: 10px;
        padding: 15px;
      }
      table {
        font-size: 12px;
      }
      th, td {
        padding: 8px 4px;
      }
      h1 {
        font-size: 22px;
      }
      img.thumb {
        max-height: 40px;
        max-width: 60px;
      }
      img.thumb:hover {
        transform: scale(2.5);
      }
      table th:nth-child(1), table td:nth-child(1) {
        font-size: 10px;
        white-space: normal;
        word-break: break-word;
      }
      table th:nth-child(2), table td:nth-child(2) {
        font-size: 0;
        width: 30px;
        position: relative;
      }
      /* Button in th:nth-child(2) - override to icon only and style */
      table th:nth-child(2) button {
        font-size: 0;
        border: none;
        background: none;
        padding: 4px;
        display: block;
        width: 100%;
        height: 100%;
        cursor: pointer;
      }
      table th:nth-child(2) {
        position: relative;
        z-index: 1;
        cursor: pointer;
      }
      /* table th:nth-child(2) button::after {
        content: "üëÅÔ∏è";
        font-size: 14px;
        position: relative;
      } */
