}

// 4. Download do JSON das edi√ß√µes
document.getElementById('download-edits').addEventListener('click', () => {
  const blob = new Blob([JSON.stringify(edits)], { type: 'application/json' });
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = 'edits.json';
  a.click();
  URL.revokeObjectURL(url);
});
      </script>
    </body>
    </html>"""
    with open(nome_arquivo, "w", encoding="utf-8") as f:
        f.write(html)
    return

def gerar_html_mensal(df_mes, nome_arquivo, nome_mes, ano):
    """Gera o HTML para um m√™s espec√≠fico"""
    print(f"DEBUG gerar_html_mensal: Processando {len(df_mes)} linhas para {nome_mes} {ano}")
    if len(df_mes) > 0:
        print(f"DEBUG: Primeiras 3 linhas de DESCRICAO: {df_mes['DESCRICAO'].head(3).tolist()}")
        print(f"DEBUG: Primeiras 3 linhas de CLASSIFICACAO: {df_mes['CLASSIFICACAO'].head(3).tolist()}")
    
    # Mapeamento de meses para n√∫meros
    meses_num = {
        'Janeiro': '01', 'Fevereiro': '02', 'Marco': '03', 'Abril': '04',
        'Maio': '05', 'Junho': '06', 'Julho': '07', 'Agosto': '08',
        'Setembro': '09', 'Outubro': '10', 'Novembro': '11', 'Dezembro': '12'
    }
    mes_num = meses_num.get(nome_mes, '01')
    
    html = '''<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Relat√≥rio de Presta√ß√£o de Contas - ''' + f"{nome_mes} {ano}" + '''</title>
  <style>
    body { 
      font-family: Arial, sans-serif; 
      margin: 20px; 
      background-color: #f9f9f9;
      line-height: 1.6;
    }
    .container {
      max-width: 1200px;
      margin: 0 auto;
      background-color: white;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 0 20px rgba(0,0,0,0.1);
    }
    h1 { 
      text-align: center; 
      color: #2c3e50;
      margin-bottom: 30px;
      font-size: 28px;
      border-bottom: 3px solid #3498db;
      padding-bottom: 15px;
    }
    .info {
      text-align: center;
      margin-bottom: 20px;
      color: #7f8c8d;
      font-style: italic;
    }
    table { 
      border-collapse: collapse; 
      width: 100%; 
      margin-top: 20px;
      font-size: 14px;
    }
    th, td { 
      border: 1px solid #ddd; 
      padding: 12px 8px; 
      text-align: center;
      vertical-align: middle;
    }
    th { 
      background-color: #3498db; 
      color: white;
      font-weight: bold;
      text-transform: uppercase;
      font-size: 12px;
    }
    tr:nth-child(even) {
      background-color: #f8f9fa;
    }
    tr:hover {
      background-color: #e3f2fd;
    }
    .total-row {
      background-color: #fff3cd !important;
      font-weight: bold;
      border-top: 3px solid #ffc107;
    }
    .total-row:hover {
      background-color: #fff3cd !important;
    }
    img.thumb { 
      max-height: 50px; 
      max-width: 80px;
      cursor: pointer; 
      transition: transform 0.3s ease;
      border-radius: 5px;
      border: 1px solid #ddd;
    }
    img.thumb:hover { 
      transform: scale(3); 
      z-index: 9999; 
      position: relative;
      border: 2px solid #3498db;
      box-shadow: 0 0 20px rgba(0,0,0,0.5);
    }
    .modal {
      display: none;
      position: fixed;
      z-index: 9999;
      padding-top: 0;
      left: 0;
      top: 0;
      width: 100vw;
      height: 100vh;
      overflow: auto;
      background-color: rgba(0,0,0,0.95);
    }
    .modal-content {
      margin: auto;
      display: block;
      width: 100%;
      height: 100%;
      object-fit: contain;
    }
    .modal.show {
      display: block;
    }
    .valor {
      font-weight: bold;
      color: #27ae60;
    }
    .data-hora {
      font-family: monospace;
      font-size: 12px;
      white-space: nowrap;
    }
    .classificacao {
      padding: 4px 8px;
      border-radius: 15px;
      font-size: 11px;
      font-weight: bold;
      text-transform: uppercase;
    }
    .transferencia {
      background-color: #e8f5e8;
      color: #2e7d32;
    }
    .pagamento {
      background-color: #fff3e0;
      color: #f57c00;
    }
    @media (max-width: 768px) {
      .container {
        margin: 10px;
        padding: 15px;
      }
      table {
        font-size: 12px;
      }
      th, td {
        padding: 8px 4px;
      }
      h1 {
        font-size: 22px;
      }
      img.thumb {
        max-height: 40px;
        max-width: 60px;
      }
      img.thumb:hover {
        transform: scale(2.5);
      }
      table th:nth-child(1), table td:nth-child(1) {
        font-size: 10px;
        white-space: normal;
        word-break: break-word;
      }
      table th:nth-child(2), table td:nth-child(2) {
        font-size: 0;
        width: 30px;
        position: relative;
      }
      /* Button in th:nth-child(2) - override to icon only and style */
      table th:nth-child(2) button {
        font-size: 0;
        border: none;
        background: none;
        padding: 4px;
        display: block;
        width: 100%;
        height: 100%;
        cursor: pointer;
      }
      table th:nth-child(2) {
        position: relative;
        z-index: 1;
        cursor: pointer;
      }
      /* table th:nth-child(2) button::after {
        content: "üëÅÔ∏è";
        font-size: 14px;
        position: relative;
      } */
      table th:nth-child(2)::after {
        display: none;
      }
      span.classificacao.transferencia::before {
        content: "‚áÜ";
      }
      span.classificacao.pagamento::before {
        content: "üí∏";
      }
      span.classificacao {
        font-size: 0;
        display: inline-block;
        width: 1em;
        height: 1em;
      }
      table th:nth-child(3)::after {
        content: "RI";
      }
      table th:nth-child(4)::after {
        content: "RA";
      }
      table th:nth-child(5)::after {
        content: "üìé";
      }
      table th:nth-child(6), table td:nth-child(6) {
        display: none;
      }
    }
  </style>
</head>
<body>
  <!-- Mensagem de carregamento -->
  <div id="loading-overlay" style="position:fixed;top:0;left:0;width:100vw;height:100vh;background:rgba(255,255,255,0.9);display:flex;align-items:center;justify-content:center;z-index:9999;">
    <div style="font-size:18px;color:#333;font-family:sans-serif;">Carregando relat√≥rio, aguarde por favor...</div>
  </div>
  <div class="container">
    <h1>Relat√≥rio de Presta√ß√£o de Contas - ''' + f"{nome_mes} {ano}" + '''</h1>
    <div class="info">
      Gerado automaticamente em ''' + pd.Timestamp.now().strftime('%d/%m/%Y √†s %H:%M:%S') + '''
    </div>
    <!-- Bot√£o de edi√ß√£o mensal -->
    <div style="text-align: right; margin-bottom: 10px;">
      <a href="report-edit-''' + f"{ano}-{mes_num}-{nome_mes}" + '''.html" target="_blank">
        <button>Editar Relat√≥rio</button>
      </a>
    </div>
    <table>
      <thead>
        <tr>
          <th>Data-Hora</th>
          <th><button id="toggle-payments" style="background:none;border:none;cursor:pointer;font-size:16px;" aria-label="Alternar pagamentos"></button></th>
          <th>Ricardo (R$)</th>
          <th>Rafael (R$)</th>
          <th>Anexo</th>
          <th>Descri√ß√£o</th>
        </tr>
      </thead>
      <tbody>
'''

    for _, row in df_mes.iterrows():
        # Constr√≥i data-hora
        data = str(row.get('DATA', ''))
        hora = str(row.get('HORA', ''))
        data_hora = f"{data} {hora}" if data != 'nan' and hora != 'nan' else ''

        # Classifica√ß√£o com estilo
        classificacao = str(row.get('CLASSIFICACAO', ''))
        if classificacao.lower() == 'transfer√™ncia':
            class_css = 'transferencia'
        elif classificacao.lower() == 'pagamento':
            class_css = 'pagamento'
        else:
            class_css = ''

        classificacao_html = f'<span class="classificacao {class_css}">{classificacao}</span>' if classificacao != 'nan' else ''

        # Valores monet√°rios
        ricardo = str(row.get('RICARDO', ''))
        rafael = str(row.get('RAFAEL', ''))
        ricardo_html = f'<span class="valor">{ricardo}</span>' if ricardo != 'nan' and ricardo != '' else ''
        rafael_html = f'<span class="valor">{rafael}</span>' if rafael != 'nan' and rafael != '' else ''

        # Determina se √© linha de total
        remetente = str(row.get('REMETENTE', ''))
