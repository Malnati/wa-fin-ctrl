<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Gastos Tia Claudia - Relat√≥rios</title>
  <style>
    body { 
      font-family: Arial, sans-serif; 
      margin: 40px; 
      background: #f5f5f5; 
    }
    .container {
      max-width: 800px; 
      margin: 0 auto;
      background: white; 
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1); 
    }
    h1 { 
      color: #2c3e50; 
      text-align: center; 
      margin-bottom: 30px;
    }
    .reports { 
      list-style: none; 
      padding: 0; 
    }
    .reports li { 
      margin: 10px 0; 
    }
    .reports a { 
      display: block; 
      padding: 15px; 
      background: #3498db; 
      color: white;
      text-decoration: none; 
      border-radius: 5px; 
      transition: background 0.3s; 
    }
    .reports a:hover { 
      background: #2980b9; 
    }
    .info { 
      background: #ecf0f1; 
      padding: 15px; 
      border-radius: 5px; 
      margin-bottom: 20px; 
    }
    .empty { 
      background: #f8d7da; 
      border: 1px solid #f5c6cb; 
      color: #721c24; 
      padding: 15px; 
      border-radius: 5px;
      margin: 20px 0; 
    }
    .loading { 
      text-align: center; 
      padding: 20px; 
      color: #666; 
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>üìä Relat√≥rios de Gastos</h1>
    <div class="info">
      <strong>Sistema de Presta√ß√£o de Contas</strong><br>
      Relat√≥rios gerados automaticamente a partir dos comprovantes processados.
    </div>
    
    <div id="loading" class="loading">
      üîç Carregando relat√≥rios dispon√≠veis...
    </div>
    
    <ul id="reports-list" class="reports" style="display: none;">
      <li><a href="report.html">üìä Relat√≥rio Geral</a></li>
      {% for report in monthly_reports %}
      <li><a href="{{ report.filename }}">{{ report.display_name }}</a></li>
      {% endfor %}
    </ul>
    
    <div id="empty-state" class="empty" style="display: none;">
      <strong>üì≠ Nenhum relat√≥rio dispon√≠vel</strong><br>
      Execute <code>python wa-fin.py processar</code> para gerar os relat√≥rios.
    </div>

    <div class="info" style="margin-top: 20px;">
      <strong>‚ÑπÔ∏è Nota:</strong> Este sistema detecta automaticamente os relat√≥rios dispon√≠veis. 
      <br><br>
      <strong>üîÑ √öltima verifica√ß√£o:</strong> <span id="last-update"></span>
    </div>
  </div>

  <script>
    // Fun√ß√£o para buscar relat√≥rios via API
    async function fetchReports() {
      try {
        const response = await fetch('/api/reports');
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        const reports = await response.json();
        return reports;
      } catch (error) {
        console.error('Erro ao buscar relat√≥rios:', error);
        throw error;
      }
    }
    
    // Fun√ß√£o para obter √≠cone baseado no tipo de relat√≥rio
    function getReportIcon(report) {
      switch (report.type) {
        case 'index':
          return 'üè†';
        case 'geral':
          return 'üìä';
        case 'mensal':
          return 'üìÖ';
        default:
          return 'üìÑ';
      }
    }
    
    // Fun√ß√£o para obter nome de exibi√ß√£o do relat√≥rio
    function getReportDisplayName(report) {
      if (report.display_name) {
        return report.display_name;
      }
      
      // Fallback para nomes antigos
      if (report.filename === 'report.html') {
        return 'üìä Relat√≥rio Geral';
      }
      
      // Para relat√≥rios mensais: report-2025-04-Abril.html -> üìÖ Abril 2025
      const match = report.filename.match(/report-(\d{4})-(\d{2})-(.+)\.html/);
      if (match) {
        const year = match[1];
        const month = match[3];
        return `üìÖ ${month} ${year}`;
      }
      
      return report.filename;
    }
    
    // Fun√ß√£o principal
    async function init() {
      const loadingEl = document.getElementById('loading');
      const reportsListEl = document.getElementById('reports-list');
      const emptyStateEl = document.getElementById('empty-state');
      const lastUpdateEl = document.getElementById('last-update');
      
      try {
        const reports = await fetchReports();
        
        if (reports.length === 0) {
          loadingEl.style.display = 'none';
          emptyStateEl.style.display = 'block';
        } else {
          // Limpa a lista existente
          reportsListEl.innerHTML = '';
          
          // Filtra apenas relat√≥rios de visualiza√ß√£o (n√£o edit√°veis)
          const filteredReports = reports.filter(report => {
            // Pula o index.html pois j√° estamos na p√°gina principal
            if (report.filename === 'index.html') {
              return false;
            }
            
            // Inclui apenas relat√≥rios de visualiza√ß√£o (n√£o edit√°veis)
            // - report.html (relat√≥rio geral)
            // - report-YYYY-MM-M√™s.html (relat√≥rios mensais de visualiza√ß√£o)
            // Exclui: report-edit-*.html (relat√≥rios edit√°veis)
            return !report.filename.startsWith('report-edit-');
          });
          
          // Adiciona os relat√≥rios filtrados
          for (const report of filteredReports) {
            const li = document.createElement('li');
            const a = document.createElement('a');
            
            // Usa a URL do relat√≥rio fornecida pela API
            a.href = report.url;
            a.textContent = getReportDisplayName(report);
            
            li.appendChild(a);
            reportsListEl.appendChild(li);
          }
          
          loadingEl.style.display = 'none';
          reportsListEl.style.display = 'block';
        }
        
        // Atualiza timestamp
        lastUpdateEl.textContent = new Date().toLocaleString('pt-BR');
        
      } catch (error) {
        console.error('Erro ao carregar relat√≥rios:', error);
        loadingEl.style.display = 'none';
        emptyStateEl.style.display = 'block';
        
        // Mostra mensagem de erro mais espec√≠fica
        emptyStateEl.innerHTML = `
          <strong>‚ùå Erro ao carregar relat√≥rios</strong><br>
          N√£o foi poss√≠vel conectar com a API.<br>
          Verifique se o servidor est√° rodando em <code>http://localhost:8000</code>
        `;
      }
    }
    
    // Inicia quando a p√°gina carrega
    document.addEventListener('DOMContentLoaded', init);
  </script>
</body>
</html> 